# Info for the schoreboard
service_name: "fungez"
description: "read the secret in /flag"
tags:
  - pwn
violates_flag_format: false # if this is not "true", the flag is verfied against the flag format

# At some point we may start blocking all egress connections. Set this to True if your service needs them. DO NOT RELY ON THIS FOR BLOCKING THOUGH.
allow_egress: False

flag: "OOO{812c27085bdafcaf9051999d626ce56ebe6560bfac9fa9599c93df9cbde14aa4}" # change it!
copy_flag_using_build_arg: True # if true it will pass in the variable THE_FLAG with the flag value above using --build-arg when service is built

# Type can be normal or king_of_the_hill
type: normal

# This is the number of concurrent connections that a container should be able to handle.
# This will be tested by the test script
concurrent_connections: 2

authors:
  - slipper

#
# Directories below the next two are absolute in either the `service` or `interaction` docker container.
#

# These are the files that will be "public" to the teams via the scoreboard.
# The paths are relative to the repository
# They are published manually. IF YOU CHANGE THEM DURING THE GAME YELL!
public_files:
  - service/Image
  - service/run.sh
  - service/src/rootfs.img
  - service/src/skip_mbind.c
  - service/src/skip_mbind.so

# Test scripts are heavily encouraged.
# All scripts should exit 0 if nothing went wrong.
# Scripts are automatically determined to be exploit scripts if they start with the word "exploit".
# Exploit scripts must output the flag using "FLAG: <FLAG>" and exit with 0 if the flag was captured correctly. 
# The paths are absolute in the `interaction` docker container.
interactions:
  - /exploit.py


# This is how players will connect to your service
# REMOVE THIS IF YOUR SERVICE HAS NO NETWORK COMPONENT
# In the rare case that 'default' and 'guess' are not OK, you can specify your own values
# chalmanger will automatically add connection info to the public page (unless you add hidden: true)
game_network_info:
    host: default
    port: guess



# It's strongly suggested to have a healthcheck regex
# The infrastructure will periodically connect  and alert if it doesn't match anymore
#
# Example: healthcheck_tcp: awesome chall
#          healthcheck_tcp_send: some intial command
# Example: healthcheck_http: Author Login
#
# It's not actually read from the info.yml, but be ready to give it to Sean (/Jacopo/Yan/...)
# It will go in inventory/group_vars/all (git@github.com:o-o-overflow/dc2020q-infra)
healthcheck_tcp: Spawning the VM

shortread_allowed_diff: -1
